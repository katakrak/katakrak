<?php
/**
 * @file
 * Code for the Katakrak commerce feature.
 */

include_once 'katakrak_commerce.features.inc';

function katakrak_commerce_init() {
  drupal_add_js(drupal_get_path('module', 'katakrak_commerce').'/katakrak_commerce.js');
}

function katakrak_commerce_commerce_checkout_pane_info_alter(&$panes) {
  foreach($panes as $key => $pane) {
    $panes[$key]['title'] = t($panes[$key]['title']);
  }
  $panes['customer_profile_shipping']['title'] = t('Shipping information');
}

function katakrak_commerce_commerce_price_formatted_components_alter(&$components, $item, $entity) {
  $components['base_price']['title'] = t('Subtotal');
  $components['tax|iva_libros']['title'] = t('VAT');
  if (isset($components['shipping']))
    $components['shipping']['title'] = t('Shipping cost');
  elseif (isset($components['flat_rate_recogida_en_la_tienda']))
    $components['flat_rate_recogida_en_la_tienda']['title'] = t($components['flat_rate_recogida_en_la_tienda']['title']);
  $components['commerce_price_formatted_amount']['title'] = t('Order total');
}

function katakrak_commerce_menu() {
  if (module_exists('devel')) {
    $items['admin/commerce/orders/%commerce_order/devel']  = array(
      'title' => 'Devel',
      'page callback' => 'katakrak_commerce_order_devel_page',
      'page arguments' => array(3),
      'access callback' => 'commerce_order_admin_order_view_access',
      'access arguments' => array(3),
      'type' => MENU_LOCAL_TASK,
      'weight' => -5,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    );
  }
  $items['admin/commerce/config/clean_carts'] = array(
    'title' => 'Limpiar carritos viejos',
    'description' => 'Limpiar carritos',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('katakrak_commerce_clean_carts_form'),
    'access arguments' => array('administer site'),
  );
  return $items;
}

function katakrak_commerce_order_devel_page($order) {
  dpm($order);      
  return '';
}

function katakrak_commerce_clean_carts_form($form, &$form_state) {
  $one_week_ago = time() - 640800;
  $or = db_or()->condition('status', 'cart')->condition('status', 'checkout_checkout')->condition('status', 'checkout_payment')->condition('status', 'checkout_shipping')
->condition('status','checkout_review');
  $rows = db_select('commerce_order', 'o')->fields('o', array('order_id'))->condition($or)->condition('o.changed', $one_week_ago, '<')->execute()->rowCount();
  
  drupal_set_message(t('Quedan @count carritos de hace más de una semana', array('@count' => $rows)));
  $form['limite'] = array(
    '#type' => 'textfield',
    '#title' => 'Número máximos de carritos a eliminar',
    '#default_value' => 500,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'enviar'
  );
  return $form;
}

function katakrak_commerce_clean_carts_form_submit($form, &$form_state) {
  $one_week_ago = time() - 640800;
  $or = db_or()->condition('status', 'cart')->condition('status', 'checkout_checkout')->condition('status', 'checkout_payment')->condition('status', 'checkout_shipping')
->condition('status','checkout_review');
  $rows = db_select('commerce_order', 'o')->fields('o', array('order_id'))->condition($or)->condition('o.changed', $one_week_ago, '<')->range(0, $form_state['input']['limite'])->execute()->fetchAll();
  
  
  foreach ($rows as $row){
    commerce_order_delete ($row->order_id);
  }

}

function katakrak_commerce_form_download($form, &$form_state, $nodes, $collapsed, $text) {
  $form['download']  = array(
    '#type' => 'fieldset',
    '#title' => t($text),
    '#collapsed' => $collapsed,
    '#collapsible' => TRUE, 
  );
  foreach ($nodes as $node) {
    $node->content = node_view($node);
    $form['download']['link'.$node->nid]  = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => render($node->content['field_libro_ed_pdf_descarga']),
    );
  }
  
  return $form;
}

function  donacion_generar_form($sku, $nid = NULL ) {
  
  $product = commerce_product_load_by_sku($sku);
  $default_quantity = 1;
  $product_ids = array($product->product_id);

  // Build the line item we'll pass to the Add to form.
  $line_item = commerce_product_line_item_new($product, $default_quantity, 0, array(), "commerce_donate");
  
 
  //commerce_line_item_save($line_item);
  $line_item->data['context']['product_ids'] = $product_ids;
  $line_item->data['context']['add_to_cart_combine'] = 1;

  // Generate a form ID for this add to cart form.
  $form_id = commerce_cart_add_to_cart_form_id($product_ids);
  $line_item->data['context']['display_path'] = current_path();
  $line_item->data['context']['nid'] = $nid;

  // Build the Add to Cart form using the prepared values.
  $form = drupal_get_form($form_id, $line_item, 0, array());
  return $form;
}

/*function katakrak_editorial_init() {
  if (current_path() == 'cart'){
   
    global $user;
    $order = commerce_cart_order_load($user->uid);
    if (!katakrak_editorial_cart_is_donation($order)) {
      if ($language->language == 'es')
        drupal_set_message("Queremos agradecerte que confíes en nosotrxs en una situación así.</br>Debido a la crisis del coronavirus no nos es posible realizar los envíos a domicilio.</br>Sin embargo, te animamos a que completes la compra y, cuando se reanude la actividad, prepararemos y enviaremos tu paquete.</br>Si seleccionas la recogida en tienda, estarás invitadx a la fiesta de recogida tras la cuarentena.</br>Cualquiera ayuda es poca en estos momentos.</br>Un saludo fraternal con sororidad.");
      else
        drupal_set_message("Mila esker halako egoera makurrean guregan konfiantza izateagatik.</br>Koronabirusaren krisia dela eta etxez etxeko banaketa eten dugu.</br>Baina erosketa buka dezazun nahi genuke, berrogeialdia bukatzean egingo dugu zure paketetxoa eta bidaliko dizugu.</br>Dendan jasotzeko aukera hautatuz gero, jasotze festara gonbidatzen zaitugu, noski.</br>Une honetan laguntza oro da ongi etorria.</br>Aizpatasunez betetako anaitasun agur bat.</br></br>");
    }
  }
}*/

/**
 * Comprueba si un pedido de comercio es una donación o no.
 * El criterio es que solamente haya un producto de tipo donacion
 * @param type $order
 * @return boolean
 */
function katakrak_commerce_cart_is_donation($order) {
  $is_donation = FALSE;
  $has_product = FALSE;
  foreach ($order->commerce_line_items['und'] as $line_item) {
    $line = commerce_line_item_load($line_item['line_item_id']);
    
    if ($line->type == 'commerce_donate' && !$has_product)
      $is_donation = TRUE;
    if ($line->type == 'product') {
      $is_donation = FALSE;
      $has_product = TRUE;
    }
  }
  return $is_donation;
}

function katakrak_commerce_cart_is_recogida($order) {
  foreach ($order->commerce_line_items['und'] as $line_item) {
    $line = commerce_line_item_load($line_item['line_item_id']);
    if ($line->data['shipping_service']['name'] == 'recogida_en_la_tienda')
      return TRUE;
  }
  return FALSE;
}

function katakrak_commerce_cart_is_bizikrak($order) {
  foreach ($order->commerce_line_items['und'] as $line_item) {
    $line = commerce_line_item_load($line_item['line_item_id']);
    if ($line->data['shipping_service']['name'] == 'bizikrak')
      return TRUE;
  }
  return FALSE;
}

function katakrak_commerce_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == "commerce_cart_add_to_cart_form_76452") {
	  $form['submit']['#value'] = t('Donar');
	}
  if ($form_id == 'commerce_checkout_form_checkout'){
    //dpm($form);
  } 
}

function katakrak_commerce_form_commerce_checkout_form_alter(&$form, &$form_state, $form_id) {
  $order = $form_state['order'];
  if ($form_id == 'commerce_checkout_form_checkout' && katakrak_commerce_cart_is_donation($order)){
    foreach ($order->commerce_line_items['und'] as $line_item) {
      $line = commerce_line_item_load($line_item['line_item_id']);

      if ($line->type == "commerce_donate") {
        $line->field_donation_libro['und'][0] =  array('nid' => $line->data['context']['nid']);
        commerce_line_item_save($line);
      }

    }
    $form['commerce_shipping'] = NULL;
  }    
  if ($form_id == 'commerce_checkout_form_shipping') {
    
    if (katakrak_commerce_cart_is_donation($order)) {
      $form['customer_profile_billing']['#access'] = FALSE;
      $form['customer_profile_shipping']['#access'] = FALSE;
    }
    if  (katakrak_commerce_cart_is_recogida($order) || katakrak_commerce_cart_is_bizikrak($order)) {
      $form['nombre_recogida'] = array(
        '#type' => 'textfield',
        '#title' => t('Nombre'),
        '#description' => t('Tu nombre para cuando vengas a recoger el pedido'),
        '#weight' => -100,
        '#required' => TRUE,
      );
      if (katakrak_commerce_cart_is_bizikrak($order)) {
        $form['telefono_recogida'] = array(
          '#type' => 'textfield',
          '#title' => t('Teléfono'),
          '#description' => t('Un número de teléfono para que te contactemos'),
          '#required' => TRUE,
          '#weight' => -60,
        );
        $form['direccion'] = array(
          '#type' => 'textfield',
          '#title' => t('Dirección'),
          '#description' => t('La dirección para la entrega'),
          '#required' => TRUE,
          '#weight' => -90,
        );
        
        $form['poblacion'] = array(
          '#type' => 'select',
          '#title' => t('Poblacion'),
          '#options' => array(
            'Ansoain' => t('Ansoain'),
            'Barañain' => t('Barañain'),
            'Berriozar' => t('Berriozar'),
            'Burlada' => t('Burlada'),
            'Cordovilla' => t('Cordovilla'),
            'Huarte' => t('Huarte'),
            'Olatz' => t('Olatz'),
            'Orcoien' => t('Orcoien'),
            'Pamplona' => t('Pamplona'),
            'Sarriguren' => t('Sarriguren'),
            'Villava' => t('Villava'),
            'Zizur' => t('Zizur'),
          ),
          '#required' => TRUE,
          '#weight' => -80,
        );
        $form['horario'] = array(
          '#type' => 'select',
          '#title' => t('Horario de entrega'),
          '#options' => array(
            'Por la mañana' => t('Mañana'),
            'Por la tarde' => t('Tarde'),
          ),
          '#required' => TRUE,
          '#weight' => -80,
        );
        
        $form['buttons']['continue']['#validate'][] = 'katakrak_commerce_checkout_form_validate';
      }
      $form['customer_profile_billing']['#access'] = FALSE;
      $form['customer_profile_shipping']['#access'] = FALSE;
      $form['buttons']['continue']['#submit'][] = 'katakrak_commerce_checkout_form_submit';
    }
  }
}

function katakrak_commerce_checkout_form_validate($form, &$form_state, $form_id) {
  //Validamos que el número esté bien
  $telefono = str_replace(' ', '', $form_state['input']['telefono_recogida']);
  if (!is_numeric($telefono) || strlen($telefono) != 9) {
    form_set_error('telefono_recogida', t("Por favor, introduce un número de teléfono válido"));
  }
}

function katakrak_commerce_checkout_form_submit($form, &$form_state, $form_id) {
  $order = $form_state['order'];
  //Cargamos el perfil presente
  $profile = commerce_customer_profile_load($order->commerce_customer_shipping['und'][0]['profile_id']);
  
  //Añadimos los campos necesarios
  $profile->commerce_customer_address['und'][0]['first_name'] = $form_state['input']['nombre_recogida'];
  $profile->commerce_customer_address['und'][0]['name_line'] = $form_state['input']['nombre_recogida'];
  $profile->commerce_customer_address['und'][0]['thoroughfare'] = $form_state['input']['direccion'];
  $profile->commerce_customer_address['und'][0]['locality'] = $form_state['input']['poblacion'];
  $profile->commerce_customer_address['und'][0]['premise'] = $form_state['input']['horario'];
  if (isset($form_state['input']['telefono_recogida'])) {
    $profile->field_customer_telefono['und'][0]['value'] = $form_state['input']['telefono_recogida'];
  }
  //Guardamos el perfil
  commerce_customer_profile_save($profile);
  //Asignamos el perfil
  $order->commerce_customer_billing['und'][0]['profile_id'] = $profile->profile_id;
  //Guardamos el pedido.
  commerce_order_save($order);
}