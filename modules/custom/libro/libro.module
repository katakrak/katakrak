<?php
/**
 * @file
 * Code for the libro feature.
 */

include_once 'libro.features.inc';


/**
 * Implementation of hook_menu().
 */
function libro_menu() {
  $items = array();
  $items['admin/commerce/config/peso'] = array(
    'title' => 'Peso de los productos',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('libro_peso_moda_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function libro_peso_moda_form($form, &$form_state) {
  $results = db_query("SELECT COUNT(*) AS total, field_product_peso_weight FROM  {field_data_field_product_peso} p INNER JOIN {field_data_commerce_stock} s  ON s.entity_id = p.entity_id WHERE commerce_stock_value > 0 GROUP BY  field_product_peso_weight ORDER BY total DESC LIMIT 0,10")->fetchAll();
 
  $total = 0;
  $freq = 0;
  foreach ($results as $res) {
    $total += $res->total * $res->field_product_peso_weight;
    $freq += $res->total;
  }
  $avg = $total / $freq;
  
  $avg_round = ceil($avg / 10) * 10;
  drupal_set_message("El promedio del peso de los libros en stock es de $avg_round gr");
  $form['borrar_pesos_pequeños'] = array(
    '#type' => 'submit',
    '#value' => t('Borrar pesos pequeños'),
  );
  return $form;
}

function libro_peso_moda_form_submit($form, &$form_state) {
  if ($form_state['clicked_button']['#value'] == t('Borrar pesos pequeños')) {
     $products = db_select('field_data_field_product_peso', 'p')->fields('p')->condition('p.field_product_peso_weight', 100, '<')->execute()->fetchAll();
     foreach ($products as $product_db) {
       $product = commerce_product_load($product_db->entity_id);
       unset($product->field_product_peso['und'][0]);
       commerce_product_save($product);
     }
  }
}

function libro_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'libro' && $view_mode == 'full') {
    $autores = array();
    foreach (element_children($node->content['field_libro_autores']) as $key) {
      $autores[] =  $node->content['field_libro_autores'][$key]['#markup'];
    }
    $node->content['autores'] = join(', ', $autores);
    
    if ($node->field_libro_estado['und'][0]['value'] == 0) {
      $product = commerce_product_load($node->field_libro_producto['und'][0]['product_id']);
      if ($product->commerce_stock['und'][0]['value'] < 1) {
        $node->content['estado'] = t('Disponible bajo pedido');
      }
    }
  }
}