<?php

/**
 * @file
 * Code for the katakrak_socios feature.
 */

include_once 'katakrak_socios.features.inc';

function katakrak_socios_menu() {
  $items['hazte-socix/alta']  = array(
    'title' => 'Hazte socio',
    'page callback' => 'katakrak_socios_hazte',
     'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  return $items;
}

function katakrak_socios_theme() {
  $path = drupal_get_path('module', 'katakrak_socios');
  return array(
    'katakrak_socios_alta_page' => array(
      'template' => 'katakrak-socios-alta-page',
      'path' => $path . '/templates',
      'arguments' => array(
          'form_signup' => NULL, 
          'form_aportacion' => NULL,
      )
    ),
    'katakrak_en_datos' => array(
      'template' => 'katakrak-en-datos',
      'path' => $path . '/templates',
      'arguments' => array(
      )
    ),
    'banner_socios' => array(
      'template' => 'banner-socios',
      'path' => $path . '/templates',
      'arguments' => array(
      )
    )
  );
}

function katakrak_socios_block_info() {    
  $blocks['katakrak_en_datos'] = array(
    // info: The name of the block.
    'info' => t('Katakrak en datos'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['banner_socios'] = array(
    // info: The name of the block.
    'info' => t('Banner campaña socios'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['alta_socios'] = array(
    // info: The name of the block.
    'info' => t('Bloque para alta de socixs'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function katakrak_socios_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'katakrak_en_datos':
      // Create your block content here
      $block['subject'] = t('Katakrak en datos');
      $block['content'] = theme('katakrak_en_datos');
      break;
    case 'banner_socios':
      $block['content'] = theme('banner_socios');
     break;
   case 'alta_socios':
      $block['content'] = katakrak_socios_hazte();
     break;
   }

  return $block;
}

function katakrak_socios_hazte() {
  $args = array(
    'form_signup' => drupal_get_form('katakrak_socios_signup_form'),
    'form_aportacion' => drupal_get_form('katakrak_socios_aportacion_form'),
  );
  return theme('katakrak_socios_alta_page', $args);
}

function katakrak_socios_signup_form($form, &$form_state) {
  if ($form_state['input']['form_id'] == 'katakrak_socios_signup_form')
    $collapsed = FALSE;
  else 
    $collapsed = TRUE;
  
  $form['signup'] = array(
    '#type' => 'fieldset',
    '#title' => '<i class="fa fa-angle-right"></i> '.t('Quiero hacerme socix'),
    '#collapsed' => $collapsed,
    '#collapsible' => TRUE,
    '#attributes' => array('class'=>array('hacerme_socix')),
  );
  
  $form['signup']['info_socixs'] = array(
    '#type' => 'fieldset',
    '#title' => t('¿Qué ofrecemos? | Para todas todo, sin importar la cuota'),
  );
  $form['signup']['info_socixs']['info'] = array(
    '#type' => 'item',
    '#markup' => '<ul>'.
      '<li>'.t('Participación en una asamblea anual').'</li>'.
      '<li>'.t('Acceso preferente a eventos (filas reservadas a socixs)').'</li>'.
      '<li>'.t('Descuentos en cursos de organizados por Katakrak').'</li>'.
      '<li>'.t('Un libro de la editorial').'</li>'.
      '<li>'.t('Fiestaca mítica de agradecimiento, sea cuando sea.').'</li>'.
      '</ul>',
  );
  $form['signup']['titulo_aportacion'] = array(
    '#type' => 'fieldset',
    '#title' => t('Mi aportación'),
  );
  
  
  $form['signup']['titulo_aportacion']['cuota'] = array(
    '#type' => 'select_or_other',
    '#title' => t('Cuota'),
    '#default_value' => array('500'),
    '#options' => array(
      '60' => t('60€ al año'),
      '120' => t('120€ al año'),
      '500' => t('500€ al año'),
    ),
    '#other' => t('Otra cuota anual'),   // Text to show as 'other' option
    '#required' => TRUE,
    '#multiple' => TRUE,
    '#other_unknown_defaults' => '200', // If the #default_value is not a valid choice in #options, what should we do? Possible values 'append', 'ignore', 'other'  (if 'other' specified you can also override #other_delimiter).
    '#other_delimiter' => ', ', // Delimiter string to delimit multiple 'other' values into the 'other' textfield.  If this is FALSE only the last value will be used.
    '#select_type' => 'radios', // Defaults to 'select'.  Can also be 'radios' or 'checkboxes'.
  );
  $form['signup']['titulo_aportacion']['fraccionado'] = array(
    '#type' => 'checkbox',
    '#title' => t("Fraccionar la cuota en dos pagos"),  
    //'#required' => TRUE,
  );
  $form['signup']['datos_personales'] = array(
    '#type' => 'fieldset',
    '#title' => t('Datos Personales'),
    '#collapsible' => FALSE,
  );
  
  $form['signup']['datos_personales']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Nombre'),
    '#required' => TRUE,
    '#size' => 20,
  );
  $form['signup']['datos_personales']['surname'] = array(
    '#type' => 'textfield',
    '#title' => t('Apellidos'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['dni'] = array(
    '#type' => 'textfield',
    '#title' => t('DNI'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['direccion'] = array(
    '#type' => 'textfield',
    '#title' => t('Dirección'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['cp'] = array(
    '#type' => 'textfield',
    '#title' => t('Código postal'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['ciudad'] = array(
    '#type' => 'textfield',
    '#title' => t('Ciudad'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Dirección de Email'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['iban'] = array(
    '#type' => 'textfield',
    '#title' => t('IBAN'),
    '#required' => TRUE,
    '#size' => 60,
  );
  $form['signup']['datos_personales']['lopd_check'] = array(
    '#type' => 'checkbox',
    '#title' => t("Al hacer click aquí aceptas las ").l(t('condiciones del sitio'), 'lopd'),  
    '#required' => TRUE,
  );
  
  
  $form['signup']['datos_personales']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Enviar'),
  );
  
  return $form;
}

function katakrak_socios_signup_form_validate($form, &$form_state) {
  
  if (!valid_email_address($form_state['values']['email']))
    form_set_error('email', t("El email introducido es incorrecto"));
  if (!check_iban($form_state['values']['iban']))
    form_set_error('iban', t("El número IBAN es incorrecto, por favor corríjalo"));
  if (!check_dni($form_state['values']['dni']))
    form_set_error('dni', t("El número de DNI es incorrecto, por favor corríjalo"));
}

function katakrak_socios_signup_form_submit($form, &$form_state) {
  if ($form_state['input']['cuota']['select'] == 'select_or_other')
    $cuota = $form_state['input']['cuota']['other'];
  else
    $cuota = $form_state['input']['cuota']['select'];

  $fraccionado = $form_state['input']['fraccionado'] == 1 ?  "fraccionado" : "no fraccionado";

    
  //llamamos al action set de rules que hará toda la acción.
  rules_invoke_component('katakrak_socios_email_alta_socixs', $form_state['input']['name'], $form_state['input']['surname'], $form_state['input']['email'], $form_state['input']['iban'], $cuota, $form_state['input']['direccion'].' '.$form_state['input']['cp'], $fraccionado, $form_state['input']['ciudad'], $form_state['input']['dni']);
}

function katakrak_socios_aportacion_form($form, &$form_state) {
  $form['aportacion'] = array(
    '#type' => 'fieldset',
    '#title' => '<i class="fa fa-angle-right"></i> '.t('Quiero hacer una aportación puntual'),
    '#collapsed' => TRUE,
    '#collapsible' => TRUE, 
    '#attributes' => array('class'=>array('hacer_aportacion')),
  );
//  $form['aportacion']['donacion'] = array(
//    '#markup' => drupal_render(donacion_generar_form('DONACION')),
//  );
  $form['aportacion']['cuota'] = array(
    '#type' => 'select_or_other',
    '#title' => t('Aportación  COVID19'),
    '#default_value' => array('500'),
    '#options' => array(
      '100' => t('100€'),
      '300' => t('300€'),
      '500' => t('500€'),
      '1000' => t('1000€'),
    ),
    '#other' => t('Otra cantidad'),   // Text to show as 'other' option
    '#required' => TRUE,
    '#multiple' => TRUE,
    '#other_unknown_defaults' => '200', // If the #default_value is not a valid choice in #options, what should we do? Possible values 'append', 'ignore', 'other'  (if 'other' specified you can also override #other_delimiter).
    '#other_delimiter' => ', ', // Delimiter string to delimit multiple 'other' values into the 'other' textfield.  If this is FALSE only the last value will be used.
    '#select_type' => 'radios', // Defaults to 'select'.  Can also be 'radios' or 'checkboxes'.
  );
  $form['aportacion']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Donar'),
  );
  return $form;
}

function katakrak_socios_aportacion_form_validate ($form, &$form_state) {
  if ($form_state['input']['cuota']['select'] == 'select_or_other' && !is_numeric($form_state['input']['cuota']['other']))
    form_set_error('cuota', t('El valor de la aportación tiene que ser un número'));
}

function katakrak_socios_aportacion_form_submit($form, &$form_state) {
  
  if ($form_state['input']['cuota']['select'] == 'select_or_other')
    $cuota = (int)$form_state['input']['cuota']['other'];
  else
    $cuota = $form_state['input']['cuota']['select'];
  global $user;
  $uid = ($user->uid) ? $user->uid : 0;
  
  //Intentamos recuperar el pedido del usuario.
  $order = commerce_cart_order_load($uid);
  if (!$order) //Si no existe el pedido lo creamos
    $order = commerce_order_new($uid, 'checkout_checkout');
    
//
//  // Save the order to get its ID.
  commerce_order_save($order);
  commerce_cart_order_session_save($order->order_id);
  
  $product = commerce_product_load_by_sku('DONCOVID19');
  $product->commerce_price['und'][0]['amount'] = $cuota;
  $line_item = commerce_product_line_item_new($product, 1, $order->order_id, array(), 'commerce_donate');
  commerce_line_item_save($line_item);
  $line_item->commerce_donate_amount['und'][0]['value'] = $cuota;
  commerce_cart_product_add($uid, $line_item);
  commerce_order_save($order);
  drupal_goto('cart');
}

  function check_iban($iban) {
    $iban = strtolower(str_replace(' ','',$iban));

    $countries = array('al'=>28,'ad'=>24,'at'=>20,'az'=>28,'bh'=>22,'be'=>16,'ba'=>20,'br'=>29,'bg'=>22,'cr'=>21,'hr'=>21,'cy'=>28,'cz'=>24,'dk'=>18,'do'=>28,'ee'=>20,'fo'=>18,'fi'=>18,'fr'=>27,'ge'=>22,'de'=>22,'gi'=>23,'gr'=>27,'gl'=>18,'gt'=>28,'hu'=>28,'is'=>26,'ie'=>22,'il'=>23,'it'=>27,'jo'=>30,'kz'=>20,'kw'=>30,'lv'=>21,'lb'=>28,'li'=>21,'lt'=>20,'lu'=>20,'mk'=>19,'mt'=>31,'mr'=>27,'mu'=>30,'mc'=>27,'md'=>24,'me'=>22,'nl'=>18,'no'=>15,'pk'=>24,'ps'=>29,'pl'=>28,'pt'=>25,'qa'=>29,'ro'=>24,'sm'=>27,'sa'=>24,'rs'=>22,'sk'=>24,'si'=>19,'es'=>24,'se'=>24,'ch'=>21,'tn'=>24,'tr'=>26,'ae'=>23,'gb'=>22,'vg'=>24);
    $chars = array('a'=>10,'b'=>11,'c'=>12,'d'=>13,'e'=>14,'f'=>15,'g'=>16,'h'=>17,'i'=>18,'j'=>19,'k'=>20,'l'=>21,'m'=>22,'n'=>23,'o'=>24,'p'=>25,'q'=>26,'r'=>27,'s'=>28,'t'=>29,'u'=>30,'v'=>31,'w'=>32,'x'=>33,'y'=>34,'z'=>35);

    if(strlen($iban) == $countries[substr($iban,0,2)]){
      $moved_char = substr($iban, 4).substr($iban,0,4);
      $moved_char_array = str_split($moved_char);
      $new_string = "";
      foreach($moved_char_array AS $key => $value){
        if(!is_numeric($moved_char_array[$key]))
          $moved_char_array[$key] = $chars[$moved_char_array[$key]];
        
        $new_string .= $moved_char_array[$key];
    }
    if(my_bcmod($new_string, '97') == 1)
      return true;
    }
    return false;
}

function my_bcmod( $x, $y ) 
{ 
    // how many numbers to take at once? carefull not to exceed (int) 
    $take = 5;     
    $mod = ''; 

    do 
    { 
        $a = (int)$mod.substr( $x, 0, $take ); 
        $x = substr( $x, $take ); 
        $mod = $a % $y;    
    } 
    while ( strlen($x) ); 

    return (int)$mod; 
} 

function check_dni($dni){
  $dni = strtoupper(str_replace(' ','',$dni));
  
  $letra = substr($dni, -1);
  $numeros = substr($dni, 0, -1);
  $valido;
  if (substr("TRWAGMYFPDXBNJZSQVHLCKE", $numeros%23, 1) == $letra && strlen($letra) == 1 && strlen ($numeros) == 8 ){
    $valido=true;
  }else{
    $valido=false;
  }
  return $valido;
}
//  $form['aportacion']['aportacion-covid19'] = array(
//    '#type' => 'select',
//    '#title' => t('Aportación inicial COVID19'),
//    '#required' => TRUE,
//    '#options' => array(
//       '60 €' => t('60 €'),
//      '250 €' => t('250 €'),
//      '500 €' => t('500 €'),
//    ),
//    '#default_value' => t('500 €'),
//  );
//  $form['aportacion']['otra-aportacion-covid19'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Deseo realizar otra aportacion inicial COVID 19'),
//    '#required' => TRUE,
//    '#size' => 5,
//    '#attributes' => array(
//      'min' => '60',
//      'class' => array(
//          'numeric' => TRUE,
//        ),
//      ),
//  );
//   $form['aportacion']['name'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Nombre'),
//    '#required' => TRUE,
//    '#size' => 20,
//  );
//   $form['aportacion']['surname'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Apellidos'),
//    '#required' => TRUE,
//    '#size' => 60,
//  );
//  $form['aportacion']['email'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Dirección de Email'),
//    '#required' => TRUE,
//    '#size' => 60,
//  );
//  $form['aportacion']['IBAN'] = array(
//    '#type' => 'textfield',
//    '#title' => t('IBAN'),
//    '#required' => TRUE,
//    '#size' => 60,
//  );
//  $form['aportacion']['submit'] = array(
//    '#type' => 'button',
//    '#title' => t('ENVIAR'),
//    '#value' => t('ENVIAR'),
//    '#required' => TRUE,
//    '#size' => 60,
//  );



// if ($form_id == 'commerce_cart_add_to_cart_form_76546') {
//    $form['line_item_fields']['commerce_donate_amount']['und']['#options'] = array(
//        100 => "100.00",
//        200 => "200.00",
//        500 => "500.00",
//        900 => "900.00",
//    );
//  }