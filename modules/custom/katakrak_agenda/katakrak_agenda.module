<?php
/**
 * @file
 * Code for the Katakrak Agenda feature.
 */

include_once 'katakrak_agenda.features.inc';

/**
 * Implements hook_block_info().
 */
function katakrak_agenda_block_info() {
  $blocks = array();  
  $blocks['katakrak_agenda_banner_organiza'] = array(
    'info' => t('Bloque "Banner" de organizar un evento'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['katakrak_agenda_nav_secundary'] = array(
    'info' => t('Bloque de navegaciÃ³n secundario de agenda'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function katakrak_agenda_block_view($delta) {
  switch($delta) {
    case 'katakrak_agenda_banner_organiza':
      $block['content'] = theme('katakrak_agenda_banner_organiza');
      break;
    case 'katakrak_agenda_nav_secundary':
      $block['content'] = theme('katakrak_agenda_nav_secundary');
      break;
  }
  return $block;
}

function katakrak_agenda_theme() {
  $path = drupal_get_path('module', 'katakrak_agenda');
  return array(
    'agenda_date' => array(
      'template' => 'agenda-date',
      'path' => $path . '/templates',
      'arguments' => array(
        'time' => NULL,
      )
    ),
    'agenda_medios' => array(
      'template' => 'agenda-medios',
      'path' => $path . '/templates',
      'arguments' => array(
        'actos' => NULL,
      ),
    ),
    'katakrak_agenda_banner_organiza' => array(
      'template' => 'katakrak-agenda-banner-organiza',
      'path' => $path . '/templates',
    ),
    'katakrak_agenda_nav_secundary' => array(
      'template' => 'katakrak-agenda-nav-secundary',
      'path' => $path . '/templates',
    ),
  );
}

function katakrak_agenda_menu() {
  $items['agenda_medios'] = array(
    'title' => 'Agenda Medios',
    'page callback' => 'katakrak_agenda_pagina_medios',
    'access arguments' => array('access dilve information'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  return $items;
}

function katakrak_agenda_pagina_medios() {
    $eventos_db = views_get_view_result('agenda', 'events_page');
    $eventos = array();
    foreach($eventos_db as $evento_db) {
        $term = taxonomy_term_load($evento_db->field_field_event_type[0]['raw']['tid']);
       
        $evento = new stdClass();
        $evento->type = $term->name . " | " . i18n_taxonomy_term_name($term, 'eu');
        $evento->title = $evento_db->node_title;
        
        $timestamp = $evento_db->field_data_field_event_date_field_event_date_value;
        $evento->fecha = format_date($timestamp, 'custom', 'd F H:i '). $evento->fecha = format_date($timestamp, 'custom', 'F\k d ', NULL, 'eu');
        $eventos[] = $evento;
    }
    return theme('agenda_medios', array('actos' => $eventos));
}

function katakrak_agenda_node_presave($node) {
  if ($node->type == 'ciclo' && $node->language != 'und') {
    $citas = array();
    $nids = array();
    foreach ($node->field_ciclo_actos['und'] as $nid) {
      $acto = node_load($nid['nid']);
      $translations = translation_node_get_translations($acto->tnid);
      if (!in_array($translations[$node->language]->nid, $nids)) {
        $citas[]['nid'] = $translations[$node->language]->nid;
        $nids[] = $translations[$node->language]->nid;
      }
    }
    $node->field_ciclo_actos['und'] = $citas;
  }
}

function katakrak_agenda_node_load($nodes, $types) {
  if (count(array_intersect(array('event'), $types))) {
    foreach ($nodes as $node) {
      $ciclos = db_select('field_data_field_ciclo_actos', 'a')->condition('a.field_ciclo_actos_nid', $node->nid)->fields('a')->execute()->fetchAll();
      foreach ($ciclos as $ciclo_db) {
        $ciclo = node_load($ciclo_db->entity_id);
        if ($ciclo->language == $node->language) {
          $node->ciclo = $ciclo;
        }
      }
    }
  }
}