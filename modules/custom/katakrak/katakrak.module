<?php
/**
 * @file
 * Code for the Katakrak feature.
 */

include_once 'katakrak.features.inc';

/**
 * Implements hook_admin_paths
 */
function katakrak_admin_paths() {
  $paths = array(
    'node/*/edit' => TRUE,
    'node/*/translate' => TRUE,
    'node/*/devel' => TRUE,
    'node/*/dilve' => TRUE,
    'node/add/*' => TRUE,
    'sukaldea' => TRUE,
  );
  return $paths;
}

/**
 * 
 */
function katakrak_theme() {
  $path = drupal_get_path('module', 'katakrak');
  return array(
    'katakrak_suscribe_block' => array(
      'template' => 'katakrak-suscribe-block',
      'arguments' => array(
        'form' => NULL
      ),
      'render element' => 'form',
      'path' => $path . '/templates',
    ),
    'katakrak_cart_block' => array(
      'template' => 'katakrak-cart-block',
      'variables' => array(
        'num_items' => NULL,
        'class' => NULL,
      ),
      'path' => $path . '/templates',
    ),
    'katakrak_social_block' => array(
      'template' => 'katakrak-social-block',
      'path' => $path . '/templates',
    ),
    'katakrak_footer_first' => array(
      'template' => 'katakrak-footer-first',
      'path' => $path . '/templates',
    ),
    'katakrak_horarios' => array(
      'template' => 'katakrak-horarios',
      'path' => $path . '/templates',
    ),
  );
}

/** 
 * 
 */
//function katakrak_block_info_alter(&$blocks, $theme, $code_blocks) {
//  foreach ($blocks['layer_slider'] as &$slider) {
//    $slider['cache'] = DRUPAL_NO_CACHE;
//  }
//}

/**
 * Implements hook_block_info().
 */
function katakrak_block_info() {
  $blocks = array();
  $blocks['language_switcher'] = array(
    'info' => t('Language switcher small'),
    // Not worth caching.
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['newsletter_suscribe'] = array(
    'info' => t('Katakrak suscribe block'),
    // Not worth caching.
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['footer_first'] = array(
    'info' => t('Katakrak first footer'),
    // Not worth caching.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['footer_second'] = array(
    'info' => t('Katakrak second footer'),
    // Not worth caching.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['footer_third'] = array(
    'info' => t('Katakrak third footer'),
    // Not worth caching.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['footer_fourth'] = array(
    'info' => t('Katakrak fourth footer'),
    // Not worth caching.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['katakrak_user_top'] = array(
    'info' => t('Katakrak user top'),
    // Not worth caching.
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['katakrak_cart'] = array(
    'info' => t('Katakrak cart'),
    // Not worth caching.
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['katakrak_social'] = array(
    'info' => t('Katakrak social'),
    // Not worth caching.
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['katakrak_horarios'] = array(
    'info' => t('Katakrak horarios'),
    // Not worth caching.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function katakrak_block_view($delta) {
  global $user;
  if ($delta == 'language_switcher' && drupal_multilingual()) {
    $path = drupal_is_front_page() ? '<front>' : $_GET['q'];
    $links = language_negotiation_get_switch_links('language', $path);
    if (isset($links->links)) {
      drupal_add_css(drupal_get_path('module', 'locale') . '/locale.css');

      foreach ($links->links as $id => &$link) {
        $link['title'] = $link['language']->prefix;
      }
      $class = "language-switcher-{$links->provider}";
      $variables = array('links' => $links->links, 'attributes' => array('class' => array($class)));
      $block['content'] = theme('links__locale_block', $variables);
      return $block;
    }
  }
  if ($delta == 'newsletter_suscribe') {
    $block['content'] = drupal_get_form('katakrak_newsletter_suscribe_form');
    return $block;
  }
  if ($delta == 'katakrak_user_top') {
    if (user_is_anonymous()) {
      //Generate login link
      $block['content'] = l(t('Acceder'), 'user');
    }
    else {
      //Generate user block
      $block['content'] = l(t('Mi cuenta'), 'user');

    }
    if (user_access('access checkout', $user))
      return $block;
  }
  if ($delta == 'katakrak_cart') {
    if ($order = commerce_cart_order_load($user->uid)) {
      $wrapper = entity_metadata_wrapper('commerce_order', $order);
      // If there are one or more products in the cart...
      $num_items = commerce_line_items_quantity($wrapper->commerce_line_items, commerce_product_line_item_types());
      $class = 'cart';
    }
    else {
      $num_items = 0;
      $class = 'cart-empty';
    }
    $content = theme('katakrak_cart_block', array('num_items' => $num_items, 'class' => $class));
    $block['content'] = $content;
    if (user_access('access checkout', $user))
      return $block;
  }
  if ($delta == 'katakrak_social') {
    $block['content'] = theme('katakrak_social_block');
    return $block;
  }
  if ($delta == 'footer_first') {
    $block['title'] = 'Katakrak Liburuak';
    $block['content'] = theme('katakrak_footer_first');
    return $block;
  }
  if ($delta == 'katakrak_horarios') {
    $block['title'] = t('Horarios');
    $block['content'] = theme('katakrak_horarios');
    return $block;
  }
}

/**
 * Function to generate a suscribe form
 * 
 * @param type $form
 * @param type $form_state
 * @return type
 */
function katakrak_newsletter_suscribe_form($form, &$form_state) {
  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Correo'),
    '#title_display' => 'invisible',
    '#required' => TRUE,
    '#attributes' => array(
      'onblur' => "if (this.value == '') {this.value = '".t('Correo')."';}",
      'onfocus' => "if (this.value == '".t('Correo')."') {this.value = '';}",
      // Prevent user from searching the default text
      'onsubmit' => "if(this.search_block_form.value=='".t('Correo')."'{ alert('Please enter a search'); return false; }",
      // Alternative (HTML5) placeholder attribute instead of using the javascript
      'placeholder' => t('Correo'),
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Enviar'),
  );
  $form ['#theme'] = 'katakrak_suscribe_block';
  return $form;
}

function katakrak_newsletter_suscribe_form_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['mail'])) {
    form_set_error('mail', t('Mail not valid'));
  }
}

function katakrak_newsletter_suscribe_form_submit($form, &$form_state) {
  drupal_set_message(t('Te has suscrito correctamente al boletín de noticias de Katakrak. Pronto recibirás un mail para confirmar tu suscripción.'));
  $simplenews_newsletter = taxonomy_get_term_by_name('Katakrak', 'newsletter');
  $simplenews_newsletter = array_pop($simplenews_newsletter);
  simplenews_subscribe_user($form_state['values']['mail'], $simplenews_newsletter->tid);
}

/**
 * Implementation of hook_menu().
 */
function katakrak_menu() {
  $items = array();
  $items['admin/config/portadas'] = array(
    'title' => t('Portadas'),
    'description' => 'Dilve options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('katakrak_portadas_batch_process_form'),
    'access arguments' => array('administer site configuration'),
  );
  $items['newsletter/confirm/mantain'] = array(
    'title' => t('Suscribirse a boletin de katakrak.net'),
    'page callback' => 'katakrak_newsletter_confirm_mantain',
    'access arguments' => array('subscribe to newsletters'),  
  );
  return $items;
}

/**
 * Creates the batch
 * 
 * @param type $form
 * @param type $form_state
 * @return type
 */
function katakrak_portadas_batch_process_form($form, &$form_state) {
  $form['width'] = array(
    '#title' => t('Width of images in px'),
    '#type' => 'textfield',
    '#size' => 10,
    '#default_value' => 500,
  );
  $form['limit'] = array(
    '#title' => t('Limit'),
    '#description' => t('If no value all items will be processed'),
    '#type' => 'textfield',
    '#size' => 10,
    '#default_value' => 100,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Procesar'),
  );
  return $form;
}

function katakrak_portadas_batch_process_form_submit($form, &$form_state) {
  $limit = $form_state['values']['limit'];
  $width = $form_state['values']['width'];
  $batch = array(
    'title' => t('Redimensionando portadas'),
    'operations' => array(
      array('katakrak_portadas_batch_process', array($limit, $width)),
    ),
    'finished' => 'katakrak_portadas_batch_process_finish',
  );
  batch_set($batch);
}

/**
 * Batch function to process all the items
 * 
 * @param type $context
 */
function katakrak_portadas_batch_process($limit, $width, &$context){
  if (!isset($context['sandbox']['progress'])) {
    $context['sandbox']['files'] = db_select('file_managed', 'f')->fields('f', array('fid'))
          ->condition('uri', "%portadas%", 'LIKE')->orderBy('filesize', 'DESC')->execute()->fetchAll();
    $context['sandbox']['progress'] = 0;
    $context['sandbox']['max'] = count($context['sandbox']['files']);
    $context['results']['portadas'] = 0;
    $context['results']['size_before'] = 0;
    $context['results']['size_after'] = 0;
  }
  
  $limit = $limit ? $limit : 100;
  $i = 0;
  
  while ($i < $limit) {
    $fid = array_shift($context['sandbox']['files']);
    $file = file_load($fid->fid);
    $image = image_load($file->uri);
    $context['results']['size_before'] += $image->info['file_size'];
    if ($image->info['width'] > $width) {
      if (image_scale($image, $width)) {
        $context['results']['portadas']++;
        image_save($image);
        $context['results']['size_after'] += $image->info['file_size'];
      }
    }
    $i++;
    $context['sandbox']['progress']++;
  }
  
  
  
  $context['message'] = t("Processed @progress of @max portadas", array('@progress' => $context['sandbox']['progress'], '@max' => $context['sandbox']['max']));
  if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
    $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
  }
}


function katakrak_portadas_batch_process_finish($success, $results, $operations) {
  if ($success) {
    drupal_set_message(t("@count portadas procesadas", array('@count' => $results['portadas'])));
    drupal_set_message(t("@count in size before processing", array('@count' => format_size($results['size_before']))));
    drupal_set_message(t("@count in size after processing", array('@count' => format_size($results['size_after']))));
    $saved = $results['size_before'] - $results['size_after'];
    drupal_set_message(t("@count saved in the operation", array('@count' => format_size($saved))));
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    $error_operation = reset($operations);
    $message = t('An error occurred while processing %error_operation with arguments: @arguments', array('%error_operation' => $error_operation[0], '@arguments' => print_r($error_operation[1], TRUE)));
    drupal_set_message($message, 'error');
  }
}

function katakrak_init() {
  $css = ".front #first-time {
display: none;
}";
  drupal_add_css($css, array('type' => 'inline'));
}

/**
 * Implements hook_token_info
 */
function katakrak_token_info() {
  $type = array(
    'name' => t('Katakrak'),
    'description' => t('Tokens related global.'),
  );
  $token['language'] = array(
    'name' => t("Site's language"),
    'description' => t("Katakrak Current language of the site."),
    'type' => 'katakrak',
  );
   return array(
     'types' => array('katakrak' => $type),
     'tokens' => array('katakrak' => $token),
  );
}

function katakrak_tokens($type, $tokens, array $data = array(), array $options = array()) {
  if ($type == 'katakrak') {
    foreach ($tokens as $name => $token) {
      if ($name == 'language') {
        global $language;
        $replacements[$token] = $language->language;
      }
    }
  }
   return $replacements;
}

/**
 * 
 */
function katakrak_newsletter_confirm_mantain() {
  $mail = isset($_GET['mail']) ? $_GET['mail'] : '';
  if (valid_email_address($mail)) {
    
    $simplenews_newsletter = array_pop(taxonomy_get_term_by_name('Katakrak', 'newsletter'));
    simplenews_subscribe_user($mail, $simplenews_newsletter->tid);
    drupal_set_message(t('Hemos envíado un mail a tu dirección de correo con las instrucciones para completar tu suscripción'));
  }
  else {
    drupal_set_message(t('Email inválido', 'error'));
  }
  drupal_goto();
}

function katakrak_preprocess_image(&$variables) {
  $attributes = &$variables['attributes'];

  foreach (array('width', 'height') as $key) {
    unset($attributes[$key]);
    unset($variables[$key]);
  }
}
