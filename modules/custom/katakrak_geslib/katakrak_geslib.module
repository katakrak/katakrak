<?php


/*
 * Implementation of hook_geslib_publisher
 */
function katakrak_geslib_geslib_publisher($op, $publisher) {
  switch ($op) {
    case 'create':
    case 'update':
      $editorial_tid = get_tid_by_geslib_id($publisher['geslib_id'], 'publisher');
      if ($editorial_tid) {
        $term = taxonomy_term_load($editorial_tid);
        $term->name = mb_convert_case($publisher['title'], MB_CASE_TITLE, "UTF-8");
      }
      else {
        $term = new stdClass();
        $term->vid = 6;
        $term->name = mb_convert_case($publisher['title'], MB_CASE_TITLE, "UTF-8");
        $term->field_editorial_geslib_id['und'][0]['value'] = $publisher['geslib_id'];
      }
      taxonomy_term_save($term);
      break;
    case 'delete':
      $editorial_tid = get_tid_by_geslib_id($publisher['geslib_id'], 'publisher');
      taxonomy_term_delete($editorial_tid);
      break;
  }
}

/*
 * Implementation of hook_geslib_category
 */
function katakrak_geslib_geslib_category($op, $category) {
switch ($op) {
    case 'create':
    case 'update':
      $category_tid = get_tid_by_geslib_id($category['geslib_id'], 'category');
      if ($category_tid) {
        $term = taxonomy_term_load($category_tid);
        $term->name = mb_convert_case($category['name'], MB_CASE_TITLE, "UTF-8");
      }
      else {
        $term = new stdClass();
        $term->vid = 7 ;
        $term->name = mb_convert_case($category['name'], MB_CASE_TITLE, "UTF-8");
        $term->field_materias_geslib_id['und'][0]['value'] = $category['geslib_id'];
      }
      taxonomy_term_save($term);
      break;
    case 'delete':
      $category_tid = get_tid_by_geslib_id($category['geslib_id'], 'category');
      taxonomy_term_delete($category_tid);
      break;
  }
}

/*
 * Implementation of hook_geslib_publisher
 */
function katakrak_geslib_geslib_author($op, $author) {
  switch ($op) {
    case 'create':
    case 'update':
      $author_tid = get_tid_by_geslib_id($author['geslib_id'], 'author');

      if ($author_tid) {
        $term = taxonomy_term_load($author_tid);
      }
      else {
        $term = new stdClass();
        $term->vid = 5;
        $term->field_autor_geslib_id['und'][0]['value'] = $author['geslib_id'];
      }
      $author_array = explode(',', $author['autor']);
      if (isset($author_array[1]))
        $term->field_autor_nombre['und'][0]['value'] = mb_convert_case($author_array[1], MB_CASE_TITLE, "UTF-8");
      $term->field_autor_apellido['und'][0]['value'] = mb_convert_case($author_array[0], MB_CASE_TITLE, "UTF-8");
      $term->name = sprintf("%s %s", $term->field_autor_nombre['und'][0]['value'], $term->field_autor_apellido['und'][0]['value']);
      
      taxonomy_term_save($term);
      break;
    case 'delete':
      $author_tid = get_id_by_geslib_id($category['geslib_id'], 'author');
      taxonomy_term_delete($author_tid);
      break;
  }
}

function katakrak_geslib_geslib_product($op, $product) {
  $commerce_product = commerce_product_load_by_sku($product['geslib_id']);
  
  if ($commerce_product) { //Averiguamos el nodo que contiene el producto
    $nid = db_select('field_data_field_libro_producto', 'p')->fields('p', array('entity_id'))
        ->condition('field_libro_producto_product_id', $commerce_product->product_id)
        ->execute()->fetchField();
  }
  else {//Si no hay un código de geslib, intentamos con el ean. Cuando se crean libros sin id de geslib en ocasiones ocurre esto.
    $commerce_product = commerce_product_load_by_sku($product['ean']);
    if ($commerce_product) {
      $nid = db_select('field_data_field_libro_producto', 'p')->fields('p', array('entity_id'))
          ->condition('field_libro_producto_product_id', $commerce_product->product_id)
          ->execute()->fetchField();
      $commerce_product->sku = $product['geslib_id'];
      //asignamos al producto el id de geslib.
      commerce_product_save($commerce_product);
    }
  }
  
  if ($nid) {
    $node = node_load($nid);
  }
  if ($op == 'delete') {
    node_delete($node->nid);
  }
  elseif ($op == 'create' || $op == 'update') {
    if (!$commerce_product) {
      $commerce_product = new stdClass();
      $commerce_product->type = 'libro';
      $commerce_product->sku = $product['geslib_id'];
      $commerce_product->title = $product['title'];
      
      $node = new stdClass();
      $node->type = 'libro';
      $node->title = $product['title'];
    }
    else {
      if (!$nid) {
        $node = new stdClass();
        $node->type = 'libro';
        $node->title = $product['title'];
      }
      else {
        $node = node_load($nid);
      }
      $node->uid = 1;
    }
    
    
    $commerce_product->commerce_price['und'][0] = array(
      'amount' => $product['price'],
      'currency_code' => 'EUR',
      'data' => array(
        'include_tax' =>  'iva_libros'
      ),
    );
    if ($product['weight'] && (!isset($commerce_product->field_peso_medio) || $commerce_product->field_peso_medio['und'][0]['value'] == 0)) {
      $commerce_product->field_product_peso['und'][0] = array(
        'weight' => intval($product['weight']),
        'unit' => 'g',
      );
    }
    else {
      $commerce_product->field_product_peso['und'][0] = array(
         'weight' => variable_get('libro_avg_weight', 0),
        'unit' => 'g'
      );
    }
    $commerce_product->commerce_stock['und'][0]['value'] = floatval($product['stock']);

    commerce_product_save($commerce_product);

    $node->field_libro_producto['und'][0]['product_id'] = $commerce_product->product_id;
    if ($product['isbn'])
      $node->field_libro_isbn['und'][0]['value'] = $product['isbn'];
    if ($product['ean'])
      $node->field_libro_ean['und'][0]['value'] = $product['ean'];
    
    if ($product['year']) {
      $year_terms = taxonomy_get_term_by_name($product['year'], 'urtea');
      if ($year_terms) {
        $year = array_pop($year_terms);
      }
      else {
        $year = new stdClass();
        foreach (taxonomy_get_vocabularies() as $vid => $vocab){
          if ($vocab->name == 'Año') {
            $year->vid = $vid ;
          }
        }
        $year->name = $product['year'];
        taxonomy_term_save($year);
      }
      $node->field_libro_year['und'][0]['tid'] = $year->tid;
    }
      
    $node->field_libro_estado['und'][0]['value'] = $product['status'];
    $node->field_libro_idioma['und'][0]['value'] = $product['language'];
    
    if (isset($product['pages']))
      $node->field_libro_paginas['und'][0]['value'] = $product['pages'];
    
    if (isset($product['subtitulo']))
      $node->field_libro_subtitulo['und'][0]['value'] = $product['subtitulo'];
    
    if (isset($product['description']['sinopsis']) && (empty($node->field_libro_dilve) || $node->field_libro_dilve['und'][0]['value'] == 0)) {
      $node->field_libro_sinopsis['und'][0]['value'] = $product['description']['sinopsis'];
      $node->field_libro_sinopsis['und'][0]['format'] = 'sinopsis';
    }
      
    
    if ($product['materia']) {
      $materia_tid = get_tid_by_geslib_id($product['materia'], 'category');
      if ($materia_tid)
        $node->field_libro_categoria['und'][0]['tid'] = $materia_tid;
    }

    $editorial_tid = get_tid_by_geslib_id($product['publisher'], 'publisher');
    if ($editorial_tid)
      $node->field_libro_editorial['und'][0]['tid'] = $editorial_tid;

    if (isset($product['authors'])) {
      $i = 0;
      $node->field_libro_autores['und'] = array();
      foreach ($product['authors'] as $author) {
        if ($author['author_type'] == 'A') {
          $autor_tid = get_tid_by_geslib_id($author['author_id'], 'author');
          if ($autor_tid) {
            $node->field_libro_autores['und'][$i] = array('tid' => $autor_tid);
            $i++;
          }
        }
      }
    }
    node_save($node);
  }
}

function get_tid_by_geslib_id($geslib_id, $type) {
  if ($type == 'publisher') {
    return db_select('field_data_field_editorial_geslib_id', 'g')->fields('g', array('entity_id'))
    ->condition('field_editorial_geslib_id_value', $geslib_id)->execute()->fetchField();
  }
  if ($type == 'category') {
    return db_select('field_data_field_materias_geslib_id', 'g')->fields('g', array('entity_id'))
    ->condition('field_materias_geslib_id_value', $geslib_id)->execute()->fetchField();
  }
  if ($type == 'author') {
    return db_select('field_data_field_autor_geslib_id', 'g')->fields('g', array('entity_id'))
    ->condition('field_autor_geslib_id_value', $geslib_id)->execute()->fetchField();
  }
}

/**
 * Implementation of hook_geslib_dilve
 */

function katakrak_geslib_dilve_process($libro, $dilve_book) {
  $libro->title = $dilve_book['title'];
  if ($dilve_book['subtitle'])
    $libro->field_libro_subtitulo['und'][0]['value'] = $dilve_book['subtitle'];
  if ($dilve_book['cover_url']) {
    //download_cover($dilve_book['cover_url'], $dilve_book['isbn']);
  }
  if ($dilve_book['description']) {
    $libro->field_libro_sinopsis['und'][0]['value'] = $dilve_book['description'];
  }
  node_save($libro);
}