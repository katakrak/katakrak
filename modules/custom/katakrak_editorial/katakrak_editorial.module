<?php
/**
 * @file
 * Code for the Katakrak Editorial feature.
 */

include_once 'katakrak_editorial.features.inc';

function katakrak_editorial_menu() {
  $items['donate/%node'] = array(
    'title callback' => 'katakrak_editorial_donacion_title',
	  'title arguments' => array(1),
    'page callback' => 'katakrak_editorial_donation',
    'page arguments' => array(1),
    'access callback' => 'katakrak_editorial_access_node_info',
	  'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  $items['download/%commerce_order']  = array(
    'title' => 'Descarga',
    'page callback' => 'katakrak_editorial_download',
    'page arguments' => array(1),
    'access callback' => 'katakrak_editorial_download_access_info',
	  'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  return $items;
}

function katakrak_editorial_donacion_title($node) {
  $title = t("Descargar @title", array('@title' => $node->title));
  drupal_set_title($title);
	return $title;
}

function katakrak_editorial_access_node_info($node) {
	if ($node->type == "libro_ed")
		return true;
}

function katakrak_editorial_download_access_info($commerce_order) {
  global $user;
  if ($commerce_order->uid == $user->uid || user_access('administer site'))
    return TRUE;
  else
    return FALSE;
}

function katakrak_editorial_download($commerce_order){
  
  foreach($commerce_order->commerce_line_items['und'] as $line_items) {
    $line_item = commerce_line_item_load($line_items['line_item_id']);
    if ($line_item->type == 'commerce_donate') {
      $nid = substr($line_item->commerce_display_path['und'][0]['value'], strpos($line_item->commerce_display_path['und'][0]['value'], '/')+1);
      $node = node_load($nid);
      $nodes[] = $node;
    }
  }
  return drupal_render(drupal_get_form('katakrak_editorial_form_download', $nodes, FALSE, 'Enlaces para la descarga'));
}

function katakrak_editorial_donation($node) {
	
	$form_donate = donacion_generar_form($node->field_donacion['und'][0]['product_id'], $node->nid);
  $form_download = drupal_render(drupal_get_form('katakrak_editorial_form_download', array($node), TRUE, 'Pulsa aquí para descargar'));

	return theme('katakrak_editorial_download_page', array('form_donate' => $form_donate, 'form_download' => $form_download, 'node' => $node));
}

function katakrak_editorial_form_download($form, &$form_state, $nodes, $collapsed, $text) {
  $form['download']  = array(
    '#type' => 'fieldset',
    '#title' => t($text),
    '#collapsed' => $collapsed,
    '#collapsible' => TRUE, 
  );
  foreach ($nodes as $node) {
    $node->content = node_view($node);
    $form['download']['link'.$node->nid]  = array(
      '#prefix' => '<div>',
      '#suffix' => '</div>',
      '#markup' => render($node->content['field_libro_ed_pdf_descarga']),
    );
  }
  
  return $form;
}

function katakrak_editorial_theme() {
	$path = drupal_get_path('module', 'katakrak_editorial');
  return array(
    'katakrak_editorial_download_page' => array(
      'template' => 'katakrak-editorial-download-page',
      'path' => $path . '/templates',
      'arguments' => array(
        'form_donate' => NULL,
        'form_download' => NULL,
		    'node' => NULL,
      )
    )
  );
}


function  donacion_generar_form($product_id, $nid) {
  
  $product = commerce_product_load($product_id);
  $default_quantity = 1;
  $product_ids = array($product->product_id);

  // Build the line item we'll pass to the Add to form.
  $line_item = commerce_product_line_item_new($product, $default_quantity, 0, array(), "commerce_donate");
  
 
  //commerce_line_item_save($line_item);
   dpm($line_item);
  $line_item->data['context']['product_ids'] = $product_ids;
  $line_item->data['context']['add_to_cart_combine'] = 1;

  // Generate a form ID for this add to cart form.
  $form_id = commerce_cart_add_to_cart_form_id($product_ids);
  $line_item->data['context']['display_path'] = current_path();
  $line_item->data['context']['nid'] = $nid;

  // Build the Add to Cart form using the prepared values.
  $form = drupal_get_form($form_id, $line_item, 0, array());
  return drupal_render($form);
}

/*function katakrak_editorial_init() {
  if (current_path() == 'cart'){
   
    global $user;
    $order = commerce_cart_order_load($user->uid);
    if (!katakrak_editorial_cart_is_donation($order)) {
      if ($language->language == 'es')
        drupal_set_message("Queremos agradecerte que confíes en nosotrxs en una situación así.</br>Debido a la crisis del coronavirus no nos es posible realizar los envíos a domicilio.</br>Sin embargo, te animamos a que completes la compra y, cuando se reanude la actividad, prepararemos y enviaremos tu paquete.</br>Si seleccionas la recogida en tienda, estarás invitadx a la fiesta de recogida tras la cuarentena.</br>Cualquiera ayuda es poca en estos momentos.</br>Un saludo fraternal con sororidad.");
      else
        drupal_set_message("Mila esker halako egoera makurrean guregan konfiantza izateagatik.</br>Koronabirusaren krisia dela eta etxez etxeko banaketa eten dugu.</br>Baina erosketa buka dezazun nahi genuke, berrogeialdia bukatzean egingo dugu zure paketetxoa eta bidaliko dizugu.</br>Dendan jasotzeko aukera hautatuz gero, jasotze festara gonbidatzen zaitugu, noski.</br>Une honetan laguntza oro da ongi etorria.</br>Aizpatasunez betetako anaitasun agur bat.</br></br>");
    }
  }
}*/

function katakrak_editorial_cart_is_donation($order) {
  $is_donation = FALSE;
  $has_product = FALSE;
  foreach ($order->commerce_line_items['und'] as $line_item) {
    $line = commerce_line_item_load($line_item['line_item_id']);
    if ($line->type == 'commerce_donate' && !$has_product)
      $is_donation = TRUE;
    if ($line->type == 'product') {
      $is_donation = FALSE;
      $has_product = TRUE;
    }
  }
  return $is_donation;
}

function katakrak_editorial_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == "commerce_cart_add_to_cart_form_76452") {
	  $form['submit']['#value'] = t('Donar');
	}
		
}

function katakrak_editorial_form_commerce_checkout_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'commerce_checkout_form_checkout') {
    if (katakrak_editorial_cart_is_donation($form_state['order'])){
      $order = $form_state['order'];
      foreach ($order->commerce_line_items['und'] as $line_item) {
        $line = commerce_line_item_load($line_item['line_item_id']);
        
        if ($line->type == "commerce_donate") {
          $line->field_donation_libro['und'][0] =  array('nid' => $line->data['context']['nid']);
          commerce_line_item_save($line);
        }
        
      }
      $form['commerce_shipping'] = NULL;
    }
  }
}

/**
 * 
 * @param type $nodes
 * @param type $types
 */
function katakrak_editorial_node_load($nodes, $types) {
  global $language;
  if (count(array_intersect(array('libro_ed'), $types))) {
    foreach($nodes as $node) {
      $traductores = '';
      foreach($node->field_libro_ed_traductor['und'] as $i => $trad_nid) {
				$traductor = node_load($trad_nid['nid']);
				$traductores .= l($traductor->title, 'node/'.$traductor->nid);
				if (count($node->field_libro_ed_traductor['und']) > $i+1)
					$traductores .= ', ';
			}
      $node->traductores = $traductores;
			
			foreach($node->field_libro_ed_autor['und'] as $i => $aut_nid) {
				$autor = node_load($aut_nid['nid']);
        $trad = translation_node_get_translations($autor->tnid);
        $autor_trad = node_load($trad[$node->language]->nid);
        $node->autores[] = $autor_trad;
			}

      $resenas = array();
      if ($node->field_libro_ed_resenas) {
        foreach ($node->field_libro_ed_resenas['und'] as $res_nid) {
          $resena = node_load($res_nid['nid']);
          if ($resena->field_cita){
            $res_temp = new stdClass();
            $res_temp->nid = $resena->nid;
            $res_temp->cita = $resena->field_cita['und'][0]['value'];
            $res_temp->fuente = $resena->field_fuente_cita['und'][0]['value'];
            $resenas[] = $res_temp;
          }
        }
      }
      $node->resenas = $resenas;
    }
  }
}